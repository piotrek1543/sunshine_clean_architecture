allprojects {
    repositories {
        jcenter()
    }
}

ext {
    //Android
    androidMinSdkVersion = 21
    androidTargetSdkVersion = 28
    androidCompileSdkVersion = 28

    //Libraries
    kotlinVersion = '1.3.31'
    rxJavaVersion = '2.2.8'
    rxAndroidVersion = '2.1.1'
    javaxAnnotationVersion = '1.0'
    javaxInjectVersion = '1'
    okHttpVersion = '3.8.1'
    retrofitVersion = '2.3.0'
    roomVersion = '2.1.0-beta01'
    lifecycleVersion = "2.2.0-alpha01"
    navigationVersion = '2.1.0-alpha04'
    materialVersion = "1.0.0"
    constraintVersion = '2.0.0-beta1 '
    supportLibraryVersion = '28.0.0'
    timberVersion = '4.7.1'
    glideVersion = '4.9.0'
    daggerVersion = '2.23'
    glassfishAnnotationVersion = '10.0-b28'

    //Testing
    robolectricVersion = '4.3'
    jUnitVersion = '4.13-beta-3'
    assertJVersion = '3.12.2'
    mockitoVersion = '2.0.2-beta'
    dexmakerVersion = '1.0'
    espressoVersion = '3.0.0'
    testingSupportLibVersion = '0.1'
    mockitoKotlinVersion = '1.6.0'
    mockitoAndroidVersion = '2.8.47'
    androidSupportRunnerVersion = '1.0.0'
    androidSupportRulesVersion = '1.0.0'
    dexmakerMockitoversion = '2.2.0'
    runnerVersion = '1.1.0'
    testingVersion = '2.1.0-beta01'
    espressoVersion = '3.2.0-beta01'
    androidXTestExtKotlinRunnerVersion = '1.1.1-beta01'

    //Linters
    rxLintVersion = '1.6.1'

    //Reporting
    leakCanaryVersion = '1.6.2'

    domainDependencies = [
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject    : "javax.inject:javax.inject:${javaxInjectVersion}",
            rxJava         : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            kotlin         : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}"
    ]

    domainTestDependencies = [
            junit  : "junit:junit:${jUnitVersion}",
            mockito: "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            assertj: "org.assertj:assertj-core:${assertJVersion}"
    ]

    presentationDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            okHttp            : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger      : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            rxJava            : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            rxAndroid         : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter : "com.squareup.retrofit2:converter-moshi:${retrofitVersion}",
            retrofitAdapter   : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            archRuntime       : "androidx.lifecycle:lifecycle-runtime:${lifecycleVersion}",
            archExtensions    : "androidx.lifecycle:lifecycle-extensions:${lifecycleVersion}",
            archCompiler      : "androidx.lifecycle:lifecycle-compiler:${lifecycleVersion}",
            timber            : "com.jakewharton.timber:timber:${timberVersion}",
    ]

    presentationTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj    : "org.assertj:assertj-core:${assertJVersion}",
            mockito    : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}",
            archTesting: "androidx.arch.core:core-testing:${testingVersion}",
    ]

    dataDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            okHttp            : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger      : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            rxJava            : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            rxAndroid         : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter : "com.squareup.retrofit2:converter-moshi:${retrofitVersion}",
            retrofitAdapter   : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    dataTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj    : "org.assertj:assertj-core:${assertJVersion}",
            mockito    : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}"
    ]

    cacheDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            rxJava            : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            roomRuntime       : "androidx.room:room-runtime:${roomVersion}",
            roomCompiler      : "androidx.room:room-compiler:${roomVersion}",
            roomRxJava        : "android.arch.persistence.room:rxjava2:${roomVersion}"
    ]

    cacheTestDependencies = [
            junit        : "junit:junit:${jUnitVersion}",
            kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj      : "org.assertj:assertj-core:${assertJVersion}",
            mockito      : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric  : "org.robolectric:robolectric:${robolectricVersion}",
            roomTesting  : "androidx.room:room-testing:${roomVersion}",
            archTesting  : "androidx.arch.core:core-testing:${testingVersion}",
            supportRunner: "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules : "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]

    remoteDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            rxJava            : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            okHttp            : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger      : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter : "com.squareup.retrofit2:converter-moshi:${retrofitVersion}",
            retrofitAdapter   : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    remoteTestDependencies = [
            junit        : "junit:junit:${jUnitVersion}",
            kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj      : "org.assertj:assertj-core:${assertJVersion}",
            mockito      : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            supportRunner: "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules : "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]

    mobileUiDependencies = [
            daggerCompiler     : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger             : "com.google.dagger:dagger:${daggerVersion}",
            rxJava             : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            rxAndroid          : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            glide              : "com.github.bumptech.glide:glide:${glideVersion}",
            kotlin             : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation    : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject        : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations : 'androidx.annotation:annotation:1.0.0',
            appCompatV7        : 'androidx.appcompat:appcompat:1.0.0',
            supportDesign      : "com.google.android.material:material:${materialVersion}",
            timber             : "com.jakewharton.timber:timber:${timberVersion}",
            daggerSupport      : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerProcessor    : "com.google.dagger:dagger-android-processor:${daggerVersion}",
            glassfishAnnotation: "org.glassfish:javax.annotation:${glassfishAnnotationVersion}",
            roomRuntime        : "android.arch.persistence.room:runtime:${roomVersion}",
            roomCompiler       : "android.arch.persistence.room:compiler:${roomVersion}",
            roomRxJava         : "android.arch.persistence.room:rxjava2:${roomVersion}",
            constraintLayout   : 'androidx.constraintlayout:constraintlayout:1.1.3',
            preferenceSupport  : 'androidx.preference:preference:1.0.0',
            rxLint             : "nl.littlerobots.rxlint:rxlint:${rxLintVersion}",
            leakCanary         : "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
            leakCanaryNoOp     : "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
            navigationUi       : "androidx.navigation:navigation-ui-ktx:$navigationVersion",
            navigationFragment : "androidx.navigation:navigation-fragment-ktx:$navigationVersion",
            espressoIdlingResource: "androidx.test.espresso:espresso-idling-resource:$espressoVersion",
    ]

    mobileUiTestDependencies = [
            junit          : "junit:junit:$jUnitVersion",
            kotlinJUnit    : "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
            assertj        : "org.assertj:assertj-core:$assertJVersion",
            mockito        : "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion",
            supportRunner  : "com.android.support.test:runner:$androidSupportRunnerVersion",
            supportRules   : "com.android.support.test:rules:$androidSupportRulesVersion",
            mockitoAndroid : "org.mockito:mockito-android:$mockitoAndroidVersion",
            espressoCore   : "androidx.test.espresso:espresso-core:$espressoVersion",
            espressoIntents: "androidx.test.espresso:espresso-intents:$espressoVersion",
            espressoContrib: "androidx.test.espresso:espresso-contrib:$espressoVersion",
            espressoIdlingConcurrent: "androidx.test.espresso.idling:idling-concurrent:$espressoVersion",
            androidRunner  : "androidx.test:runner:$runnerVersion",
            androidRules   : "androidx.test:rules:$runnerVersion",
            androidXTestExtKotlinRunner: "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion",
    ]

}